<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.auction.Dao.logisticsDao">
  <resultMap id="BaseResultMap" type="com.example.auction.Model.logistics">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="addresseename" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="addresseetel" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="userid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="startaddress" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="endaddress" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="state" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pay" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="other" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, addresseename, addresseetel, userid, startaddress, endaddress, state, pay, other
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from logistics
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from logistics
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.auction.Model.logistics">
    insert into logistics (id, addresseename, addresseetel, 
      userid, startaddress, endaddress, 
      state, pay, other)
    values (#{id,jdbcType=INTEGER}, #{addresseename,jdbcType=VARCHAR}, #{addresseetel,jdbcType=VARCHAR}, 
      #{userid,jdbcType=INTEGER}, #{startaddress,jdbcType=VARCHAR}, #{endaddress,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{pay,jdbcType=VARCHAR}, #{other,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.auction.Model.logistics">
    insert into logistics
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="addresseename != null">
        addresseename,
      </if>
      <if test="addresseetel != null">
        addresseetel,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="startaddress != null">
        startaddress,
      </if>
      <if test="endaddress != null">
        endaddress,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="pay != null">
        pay,
      </if>
      <if test="other != null">
        other,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="addresseename != null">
        #{addresseename,jdbcType=VARCHAR},
      </if>
      <if test="addresseetel != null">
        #{addresseetel,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="startaddress != null">
        #{startaddress,jdbcType=VARCHAR},
      </if>
      <if test="endaddress != null">
        #{endaddress,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="pay != null">
        #{pay,jdbcType=VARCHAR},
      </if>
      <if test="other != null">
        #{other,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.auction.Model.logistics">
    update logistics
    <set>
      <if test="addresseename != null">
        addresseename = #{addresseename,jdbcType=VARCHAR},
      </if>
      <if test="addresseetel != null">
        addresseetel = #{addresseetel,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="startaddress != null">
        startaddress = #{startaddress,jdbcType=VARCHAR},
      </if>
      <if test="endaddress != null">
        endaddress = #{endaddress,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="pay != null">
        pay = #{pay,jdbcType=VARCHAR},
      </if>
      <if test="other != null">
        other = #{other,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.auction.Model.logistics">
    update logistics
    set addresseename = #{addresseename,jdbcType=VARCHAR},
      addresseetel = #{addresseetel,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER},
      startaddress = #{startaddress,jdbcType=VARCHAR},
      endaddress = #{endaddress,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      pay = #{pay,jdbcType=VARCHAR},
      other = #{other,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>